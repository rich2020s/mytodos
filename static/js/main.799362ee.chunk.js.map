{"version":3,"sources":["components/todostyled.js","todo.js","index.js"],"names":["Button","styled","div","h1","input","button","props","isDone","Test","ReactDOM","render","document","getElementById"],"mappings":"mNAgBMA,GAdmBC,IAAOC,IAAV,gJAODD,IAAOE,GAAV,mDAGAF,IAAOG,MAAV,4DAIAH,IAAOI,OAAV,wJAQSJ,YAAOD,EAAPC,CAAH,gMAUAA,YAAOD,EAAPC,CAAH,kFAKMA,YAAOD,EAAPC,CAAH,6CAIEA,IAAOC,IAAV,wIAKI,SAACI,GAAD,OAAWA,EAAMC,QAAU,kBAEzBN,IAAOC,IAAV,qNCoELM,MAHf,WACE,OAAO,yCChHTC,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.799362ee.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  max-width: 800px;\n  flex-direction: column;\n  margin: 30px auto;\n  justify-content: center;\n`;\nexport const Title = styled.h1`\n  text-align: center;\n`;\nconst TodoInput = styled.input`\n  width: 50%;\n  height: 40px;\n`;\nconst Button = styled.button`\n  padding: 6px 12px;\n  margin-left: 10px;\n  border: 1px solid black;\n  border-radius: 3px;\n  background-color: white;\n`;\n\nconst ToggleButton = styled(Button)`\n  background-color: white;\n  border-color: #0d6efd;\n  color: #0d6efd;\n  :hover {\n    color: white;\n    background-color: #0d6efd;\n    transition: 0.3s;\n  }\n`;\nconst RedButton = styled(Button)`\n  background: red;\n  color: white;\n  border: none;\n`;\nconst IsDoneButton = styled(Button)`\n  :hover {\n  }\n`;\nconst TodoContent = styled.div`\n  font-size: 18px;\n  color: #333;\n  max-width: 300px;\n  word-wrap: break-word;\n  text-decoration: ${(props) => props.isDone && \"line-through\"};\n`;\nconst TodosContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px;\n  margin-top: 10px;\n  max-width: 70%;\n  border: 1px solid #333;\n  border-radius: 5px;\n`;\n\nexport function TodoFilter({\n  handleFilterButton,\n  deleteAllTodos,\n  filterValue,\n}) {\n  return (\n    <div\n      style={{\n        flexDirection: \"row\",\n        marginTop: \"10px\",\n      }}\n    >\n      <RedButton onClick={() => deleteAllTodos()}>清空 Todo</RedButton>\n      <ToggleButton onClick={() => handleFilterButton(\"all\")}>\n        全部\n      </ToggleButton>\n      <ToggleButton\n        filterValue={filterValue}\n        onClick={() => handleFilterButton(\"done\")}\n      >\n        已完成\n      </ToggleButton>\n      <ToggleButton\n        filterValue={filterValue}\n        onClick={() => handleFilterButton(\"undone\")}\n      >\n        未完成\n      </ToggleButton>\n    </div>\n  );\n}\nexport function Todos({\n  todos,\n  handleDeleteTodo,\n  handleIsDone,\n  filterValue,\n  handleEdited,\n  editedId,\n  handleEditedComplete,\n  handleEditedOnChange,\n  editedValue,\n}) {\n  return todos.map((todo) => {\n    if (filterValue === \"done\" && !todo.isDone) return;\n    if (filterValue === \"undone\" && todo.isDone) return;\n    return (\n      <TodosContainer key={todo.id}>\n        {editedId === todo.id ? (\n          <TodoContent\n            id={\"editedInput\"}\n            onChange={(e) => handleEditedOnChange(e)}\n            as=\"input\"\n            value={editedValue}\n          />\n        ) : (\n          <TodoContent isDone={todo.isDone}>{todo.content}</TodoContent>\n        )}\n        <div>\n          <IsDoneButton onClick={() => handleIsDone(todo.id)}>\n            {todo.isDone ? \"已完成\" : \"未完成\"}\n          </IsDoneButton>\n          <Button onClick={() => handleDeleteTodo(todo.id)}>刪除</Button>\n          {editedId === todo.id ? (\n            <Button onClick={() => handleEditedComplete(todo.id)}>完成</Button>\n          ) : (\n            <Button onClick={() => handleEdited(todo.id, todo.content)}>\n              編輯\n            </Button>\n          )}\n        </div>\n      </TodosContainer>\n    );\n  });\n}\nexport function AddTodo({ handleAddTodo, handleInputChange, inputValue }) {\n  return (\n    <div style={{ display: \"flex\" }}>\n      <TodoInput onChange={(e) => handleInputChange(e)} value={inputValue} />\n      <Button onClick={() => handleAddTodo(inputValue)}>Add Todo</Button>\n    </div>\n  );\n}\n","import \"./todo.css\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { AddTodo, TodoFilter, Todos, Container, Title } from \"./components\";\n\nfunction TodoList() {\n  const id = useRef(3);\n  const [editedId, setEditedId] = useState(null);\n  const [editedValue, setEditedValue] = useState(\"\");\n  const [filterValue, setFilterValue] = useState(\"all\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [todos, setTodos] = useState([\n    {\n      id: 1,\n      content: \"哈哈\",\n      isDone: true,\n    },\n    {\n      id: 2,\n      content: \"按下編輯後，不按下完成就不能刪除或分類喔！\",\n      isDone: false,\n    },\n  ]);\n  function deleteAllTodos() {\n    if (editedId !== null) return;\n    setTodos([]);\n  }\n  function handleEdited(id, content) {\n    if (editedId === null) {\n      setEditedId(id);\n      setEditedValue(content);\n    }\n  }\n  useEffect(() => {\n    if (document.querySelector(\"#editedInput\"))\n      document.querySelector(\"#editedInput\").focus();\n  }, [editedId]);\n\n  function handleEditedOnChange(e) {\n    setEditedValue(e.target.value);\n  }\n  function handleEditedComplete(id) {\n    setEditedId(null);\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id !== id) return todo;\n        return {\n          id,\n          content: editedValue,\n          isDone: todo.isDone,\n        };\n      })\n    );\n  }\n  function handleFilterButton(value) {\n    if (editedId !== null) return;\n    setFilterValue(value);\n  }\n  function handleInputChange(e) {\n    setInputValue(e.target.value);\n  }\n  function handleAddTodo(inputValue) {\n    if (inputValue === \"\") return;\n    setTodos([\n      ...todos,\n      {\n        id: id.current,\n        content: inputValue,\n      },\n    ]);\n    id.current++;\n    setInputValue(\"\");\n  }\n  function handleDeleteTodo(id) {\n    if (editedId !== null) return;\n    setTodos(todos.filter((todo) => todo.id !== id));\n  }\n  function handleIsDone(id) {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id !== id) return todo;\n        return {\n          id,\n          content: todo.content,\n          isDone: !todo.isDone,\n        };\n      })\n    );\n  }\n  return (\n    <Container>\n      <Title>My todolist</Title>\n      <AddTodo\n        handleAddTodo={handleAddTodo}\n        handleInputChange={handleInputChange}\n        inputValue={inputValue}\n      />\n      <TodoFilter\n        handleFilterButton={handleFilterButton}\n        deleteAllTodos={deleteAllTodos}\n        filterValue={filterValue}\n      />\n      <Todos\n        editedValue={editedValue}\n        handleEditedOnChange={handleEditedOnChange}\n        handleEditedComplete={handleEditedComplete}\n        editedId={editedId}\n        handleEdited={handleEdited}\n        filterValue={filterValue}\n        todos={todos}\n        handleDeleteTodo={handleDeleteTodo}\n        handleIsDone={handleIsDone}\n      />\n    </Container>\n  );\n}\nfunction Test() {\n  return <div>hello</div>;\n}\nexport default Test;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Test from \"./todo\";\n\nReactDOM.render(<Test />, document.getElementById(\"root\"));\n"],"sourceRoot":""}