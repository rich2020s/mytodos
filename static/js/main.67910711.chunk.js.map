{"version":3,"sources":["components/todostyled.js","todo.js","index.js"],"names":["Container","styled","div","Title","h1","TodoInput","input","Button","button","ToggleButton","RedButton","IsDoneButton","TodoContent","props","isDone","TodosContainer","TodoFilter","handleFilterButton","deleteAllTodos","filterValue","style","flexDirection","marginTop","onClick","Todos","todos","handleDeleteTodo","handleIsDone","handleEdited","editedId","handleEditedComplete","handleEditedOnChange","editedValue","map","todo","id","onChange","e","as","value","content","AddTodo","handleAddTodo","handleInputChange","inputValue","display","TodoList","useRef","useState","setEditedId","setEditedValue","setFilterValue","setInputValue","setTodos","useEffect","document","querySelector","focus","current","target","filter","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.67910711.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  max-width: 800px;\n  flex-direction: column;\n  margin: 30px auto;\n  justify-content: center;\n`;\nexport const Title = styled.h1`\n  text-align: center;\n`;\nconst TodoInput = styled.input`\n  width: 50%;\n  height: 40px;\n`;\nconst Button = styled.button`\n  padding: 6px 12px;\n  margin-left: 10px;\n  border: 1px solid black;\n  border-radius: 3px;\n  background-color: white;\n`;\n\nconst ToggleButton = styled(Button)`\n  background-color: white;\n  border-color: #0d6efd;\n  color: #0d6efd;\n  :hover {\n    color: white;\n    background-color: #0d6efd;\n    transition: 0.3s;\n  }\n`;\nconst RedButton = styled(Button)`\n  background: red;\n  color: white;\n  border: none;\n`;\nconst IsDoneButton = styled(Button)`\n  :hover {\n  }\n`;\nconst TodoContent = styled.div`\n  font-size: 18px;\n  color: #333;\n  max-width: 300px;\n  word-wrap: break-word;\n  text-decoration: ${(props) => props.isDone && \"line-through\"};\n`;\nconst TodosContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px;\n  margin-top: 10px;\n  max-width: 70%;\n  border: 1px solid #333;\n  border-radius: 5px;\n`;\n\nexport function TodoFilter({\n  handleFilterButton,\n  deleteAllTodos,\n  filterValue,\n}) {\n  return (\n    <div\n      style={{\n        flexDirection: \"row\",\n        marginTop: \"10px\",\n      }}\n    >\n      <RedButton onClick={() => deleteAllTodos()}>清空 Todo</RedButton>\n      <ToggleButton onClick={() => handleFilterButton(\"all\")}>\n        全部\n      </ToggleButton>\n      <ToggleButton\n        filterValue={filterValue}\n        onClick={() => handleFilterButton(\"done\")}\n      >\n        已完成\n      </ToggleButton>\n      <ToggleButton\n        filterValue={filterValue}\n        onClick={() => handleFilterButton(\"undone\")}\n      >\n        未完成\n      </ToggleButton>\n    </div>\n  );\n}\nexport function Todos({\n  todos,\n  handleDeleteTodo,\n  handleIsDone,\n  filterValue,\n  handleEdited,\n  editedId,\n  handleEditedComplete,\n  handleEditedOnChange,\n  editedValue,\n}) {\n  return todos.map((todo) => {\n    if (filterValue === \"done\" && !todo.isDone) return;\n    if (filterValue === \"undone\" && todo.isDone) return;\n    return (\n      <TodosContainer key={todo.id}>\n        {editedId === todo.id ? (\n          <TodoContent\n            id={\"editedInput\"}\n            onChange={(e) => handleEditedOnChange(e)}\n            as=\"input\"\n            value={editedValue}\n          />\n        ) : (\n          <TodoContent isDone={todo.isDone}>{todo.content}</TodoContent>\n        )}\n        <div>\n          <IsDoneButton onClick={() => handleIsDone(todo.id)}>\n            {todo.isDone ? \"已完成\" : \"未完成\"}\n          </IsDoneButton>\n          <Button onClick={() => handleDeleteTodo(todo.id)}>刪除</Button>\n          {editedId === todo.id ? (\n            <Button onClick={() => handleEditedComplete(todo.id)}>完成</Button>\n          ) : (\n            <Button onClick={() => handleEdited(todo.id, todo.content)}>\n              編輯\n            </Button>\n          )}\n        </div>\n      </TodosContainer>\n    );\n  });\n}\nexport function AddTodo({ handleAddTodo, handleInputChange, inputValue }) {\n  return (\n    <div style={{ display: \"flex\" }}>\n      <TodoInput onChange={(e) => handleInputChange(e)} value={inputValue} />\n      <Button onClick={() => handleAddTodo(inputValue)}>Add Todo</Button>\n    </div>\n  );\n}\n","import \"./todo.css\";\nimport { useState, useRef } from \"react\";\nimport { AddTodo, TodoFilter, Todos, Container, Title } from \"./components\";\nimport { useEffect } from \"react/cjs/react.development\";\n\nfunction TodoList() {\n  const id = useRef(3);\n  const [editedId, setEditedId] = useState(null);\n  const [editedValue, setEditedValue] = useState(\"\");\n  const [filterValue, setFilterValue] = useState(\"all\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [todos, setTodos] = useState([\n    {\n      id: 1,\n      content: \"哈哈\",\n      isDone: true,\n    },\n    {\n      id: 2,\n      content: \"按下編輯後，不按下完成就不能刪除或分類喔！\",\n      isDone: false,\n    },\n  ]);\n  function deleteAllTodos() {\n    if (editedId !== null) return;\n    setTodos([]);\n  }\n  function handleEdited(id, content) {\n    if (editedId === null) {\n      setEditedId(id);\n      setEditedValue(content);\n    }\n  }\n  useEffect(() => {\n    if (document.querySelector(\"#editedInput\"))\n      document.querySelector(\"#editedInput\").focus();\n  }, [editedId]);\n\n  function handleEditedOnChange(e) {\n    setEditedValue(e.target.value);\n  }\n  function handleEditedComplete(id) {\n    setEditedId(null);\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id !== id) return todo;\n        return {\n          id,\n          content: editedValue,\n          isDone: todo.isDone,\n        };\n      })\n    );\n  }\n  function handleFilterButton(value) {\n    if (editedId !== null) return;\n    setFilterValue(value);\n  }\n  function handleInputChange(e) {\n    setInputValue(e.target.value);\n  }\n  function handleAddTodo(inputValue) {\n    if (inputValue === \"\") return;\n    setTodos([\n      ...todos,\n      {\n        id: id.current,\n        content: inputValue,\n      },\n    ]);\n    id.current++;\n    setInputValue(\"\");\n  }\n  function handleDeleteTodo(id) {\n    if (editedId !== null) return;\n    setTodos(todos.filter((todo) => todo.id !== id));\n  }\n  function handleIsDone(id) {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id !== id) return todo;\n        return {\n          id,\n          content: todo.content,\n          isDone: !todo.isDone,\n        };\n      })\n    );\n  }\n  return (\n    <Container>\n      <Title>My todolist</Title>\n      <AddTodo\n        handleAddTodo={handleAddTodo}\n        handleInputChange={handleInputChange}\n        inputValue={inputValue}\n      />\n      <TodoFilter\n        handleFilterButton={handleFilterButton}\n        deleteAllTodos={deleteAllTodos}\n        filterValue={filterValue}\n      />\n      <Todos\n        editedValue={editedValue}\n        handleEditedOnChange={handleEditedOnChange}\n        handleEditedComplete={handleEditedComplete}\n        editedId={editedId}\n        handleEdited={handleEdited}\n        filterValue={filterValue}\n        todos={todos}\n        handleDeleteTodo={handleDeleteTodo}\n        handleIsDone={handleIsDone}\n      />\n    </Container>\n  );\n}\n\nexport default TodoList;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport TodoList from \"./todo\";\n\nReactDOM.render(<TodoList />, document.getElementById(\"root\"));\n"],"sourceRoot":""}